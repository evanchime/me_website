# Tells NGINX to automatically determine the optimal number of worker processes based on available CPU cores
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Include MIME types for proper content handling
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Rate limit zone for health check endpoint.
    # Limits: 1 request per second per IP, with a 10 minute memory zone.
    limit_req_zone $binary_remote_addr zone=health:10m rate=1r/s;

    server {
        # listen 8080;

        # # Change to your domain name or IP address in production
        # server_name localhost; 


        listen 8080 ssl;
        server_name localhost;

        # SSL Certificate Paths
        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        # Protocols: Disable old TLS versions (1.0, 1.1)
        ssl_protocols TLSv1.2 TLSv1.3;

        # Ciphers: Use modern, secure ciphers (Mozilla Intermediate profile)
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Disable OCSP Stapling (required) Enable CA certificates
        ssl_stapling off;

        ssl_dhparam  /etc/ssl/certs/dhparam.pem;

        # Uncomment and adjust paths when ready for HTTPS
        # listen 443 ssl;
        # listen [::]:443 ssl;
        # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256...';


        # Static assets configuration
        location /static/ {
            alias /app/staticfiles/;
            expires 365d;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        # Security Headers Configuration
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://cdn.jsdelivr.net https://getbootstrap.com https://www.googletagmanager.com https://www.google-analytics.com https://ssl.google-analytics.com; style-src 'self' 'unsafe-inline'; object-src 'none'; frame-ancestors 'none'; form-action 'self';" always; # upgrade-insecure-requests;" always; # Enable when using SSL
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # Enable when using SSL

        # Public routes (home, signup) with caching
        location ~ ^/(|signup)$ {
            add_header Cache-Control "public, max-age=300";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://web:8000;
        }
        
        # Health check endpoint with rate limiting
        location /ht/ {
            # Apply rate limiting for the health check endpoint.
            # Allows bursts of up to 5 requests with no delay once the average limit is exceeded.
            limit_req zone=health burst=5 nodelay;
            proxy_pass http://web:8000;
            proxy_set_header X-Health-Check-Secret $http_x_health_check_secret;
        }

        # Catch-all for other routes with appropriate headers
        location / {
            proxy_pass http://web:8000;
            proxy_hide_header Cache-Control;
            add_header Cache-Control "private, no-cache, must-revalidate";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Local MIME type overrides
        types {
            text/css                   css;
            application/javascript     js;
            image/png                  png;
            image/svg+xml              svg;
        }
    }
}
