services:
  web:
    image: evanchime/me_website:latest
    # build:
    #   context: ./me_website_project
    #   dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
    # extra_hosts:
    # - "host.docker.internal:host-gateway"
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "-H", "X-Health-Check-Secret: ${HEALTH_CHECK_SECRET}", "http://localhost:8000/ht/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:16-alpine
    env_file:
      - .env
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 15s
      timeout: 3s
      retries: 6
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "8080:8080"
    volumes:
      - static_volume:/app/staticfiles
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:Z # Uncomment for SELinux
    depends_on:
      web:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

volumes:
  static_volume:
  db_volume:

networks:
  app_network: